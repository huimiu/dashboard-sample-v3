// This file is automatically generated by Teams Toolkit.
// The teamsfx tasks defined in this file require Teams Toolkit version >= 4.1.0.
// See https://aka.ms/teamsfx-debug-tasks for details on how to customize each task and how to integrate with existing Teams Toolkit projects.
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Teams App Locally",
            "dependsOn": [
                "Validate & install prerequisites",
                "Create resources",
                "Build project",
                "Start application"
            ],
            "dependsOrder": "sequence"
        },
        {
            // Check all required prerequisites.
            // See https://aka.ms/teamsfx-check-prerequisites-task to know the details and how to customize the args.
            "label": "Validate & install prerequisites",
            "type": "teamsfx",
            "command": "debug-check-prerequisites",
            "args": {
                "prerequisites": [
                    "nodejs", // Validate if Node.js is installed.
                    "m365Account", // Sign-in prompt for Microsoft 365 account, then validate if the account enables the sideloading permission.
                    "devCert", // Install localhost SSL certificate. It's used to serve the development sites over HTTPS to debug the Tab app in Teams.
                    "func", // Install Azure Functions Core Tools. It's used to serve Azure Functions hosted project locally.
                    "dotnet", // Ensure .NET Core SDK is installed. TeamsFx Azure Functions project depends on extra .NET binding extensions for HTTP trigger authorization.
                    "portOccupancy" // Validate available ports to ensure those debug ones are not occupied.
                ],
                "portOccupancy": [
                    53000, // tab service port
                    7071, // backend service port
                    9229 // backend inspector port for Node.js debugger
                ]
            }
        },
        {
            // Create the debug resources.
            // See https://aka.ms/teamsfx-provision-task to know the details and how to customize the args.
            "label": "Create resources",
            "type": "teamsfx",
            "command": "provision",
            "args": {
                "template": "${workspaceFolder}/teamsapp.local.yml",
                "env": "local"
            }
        },
        {
            // Build project.
            // See https://aka.ms/teamsfx-deploy-task to know the details and how to customize the args.
            "label": "Build project",
            "type": "teamsfx",
            "command": "deploy",
            "args": {
                "template": "${workspaceFolder}/teamsapp.local.yml",
                "env": "local"
            }
        },
        {
            "label": "Start application",
            "dependsOn": [
                "Start frontend",
                "Start backend"
            ]
        },
        {
            "label": "Start frontend",
            "type": "shell",
            "command": "npm run dev:teamsfx",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": {
                "pattern": {
                    "regexp": "^.*$",
                    "file": 0,
                    "location": 1,
                    "message": 2
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".*",
                    "endsPattern": "Compiled|Failed|compiled|failed"
                }
            }
        },
        {
            "label": "Start backend",
            "type": "shell",
            "command": "npm run dev:teamsfx",
            "isBackground": true,
            "options": {
              "cwd": "${workspaceFolder}/api",
              "env": {
                "PATH": "${command:fx-extension.get-func-path}${env:PATH}"
              }
            },
            "problemMatcher": {
              "pattern": {
                "regexp": "^.*$",
                "file": 0,
                "location": 1,
                "message": 2
              },
              "background": {
                "activeOnStart": true,
                "beginsPattern": "^.*(Job host stopped|signaling restart).*$",
                "endsPattern": "^.*(Worker process started and initialized|Host lock lease acquired by instance ID).*$"
              }
            },
            "presentation": {
              "reveal": "silent"
            },
            "dependsOn": [
              "Install Azure Functions binding extensions",
              "Watch backend"
            ]
          },
          {
            // TeamsFx Azure Functions project depends on extra Azure Functions binding extensions for HTTP trigger authorization.
            "label": "Install Azure Functions binding extensions",
            "type": "shell",
            "command": "dotnet build extensions.csproj -o ./bin --ignore-failed-sources",
            "options": {
                "cwd": "${workspaceFolder}/api",
                "env": {
                    "PATH": "${command:fx-extension.get-dotnet-path}${env:PATH}"
                }
            },
            "presentation": {
                "reveal": "silent"
            }
        },
          {
            "label": "Watch backend",
            "type": "shell",
            "command": "npm run watch",
            "isBackground": true,
            "options": {
              "cwd": "${workspaceFolder}/api"
            },
            "problemMatcher": "$tsc-watch",
            "presentation": {
              "reveal": "silent"
            }
          }
    ]
}